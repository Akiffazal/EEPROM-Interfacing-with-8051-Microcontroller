C51 COMPILER V9.60.7.0   MAIN                                                              09/24/2024 16:44:00 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "Includes.h"
   2          
   3          // Main function
   4          void main()
   5          {
   6   1          unsigned char RxByte = 0;
   7   1          unsigned char TxArray[3] = { 'A', 'k', 'i'};
   8   1          unsigned char RxArray[3] = { 0 }; 
   9   1          char buffer[2];  // Declare buffer at the beginning of the function
  10   1      
  11   1          // Initialize LCD
  12   1          lcd_init();
  13   1      
  14   1          // Initialize i2c pins
  15   1          InitI2C();                                            
  16   1      
  17   1          // Write 'd' at 0x0001 address in EEPROM
  18   1          Write_Byte_To_24LC64_EEPROM(0x0001, 'f');
  19   1          // Read from 0x0001 address from EEPROM      
  20   1          RxByte = Read_Byte_From_24LC64_EEPROM(0x0001);        
  21   1      
  22   1          // Write 4 bytes of TxArray starting from 0x0020 address in EEPROM
  23   1          Write_Page_To_24LC64_EEPROM(0x0020, TxArray, 4);
  24   1          // Read 4 bytes starting from 0x0020 address in EEPROM, save these bytes into RxArray
  25   1          Read_Bytes_From_24LC64_EEPROM(0x0020, RxArray, 4);
  26   1      
  27   1          // Display received values on LCD display
  28   1          lcd_char(RxArray[0]);
  29   1          lcd_char(RxArray[1]);
  30   1          lcd_char(RxArray[2]);
  31   1      //    lcd_char(RxArray[3]);
  32   1      
  33   1          buffer[0] = RxByte;  // Convert the character to a string
  34   1          buffer[1] = '\0';    // Null-terminate the string
  35   1          lcd_string(buffer);  // Display the string
  36   1      
  37   1          while(1)
  38   1          {   
  39   2          }
  40   1      }
  41          
  42          
  43          
  44          
  45          
  46          ///*  Name     : main.c
  47          // *  Purpose  : Main file for 24LC64 EEPROM code for AT89C51.
  48          // *  Author   : M.Saeed Yasin
  49          // *  Date     : 05-11-12
  50          // *  Website  : saeedsolutions.blogspot.com
  51          // *  Revision : None
  52          // */
  53          //#include "Includes.h"
  54          
C51 COMPILER V9.60.7.0   MAIN                                                              09/24/2024 16:44:00 PAGE 2   

  55          //// Main function
  56          //void main()
  57          //{ 
  58          //  unsigned char RxByte = 0;
  59          //  unsigned char TxArray[4] = { 'S', 'a', 'e', 'e' };
  60          //  unsigned char RxArray[4] = { 0 }; 
  61          
  62          //  // Initialize LCD
  63          //  lcd_init();
  64          
  65          //  // Initialize i2c pins
  66          //  InitI2C();                      
  67          
  68          //  // Write 'd' at 0x0001 address in EEPROM
  69          //  Write_Byte_To_24LC64_EEPROM(0x0001, 'd');
  70          //  // Read from 0x0001 address from EEPROM   
  71          //  RxByte = Read_Byte_From_24LC64_EEPROM(0x0001);    
  72          
  73          //  // Write 4 bytes of TxArray starting from 0x0020 address in EEPROM
  74          //  Write_Page_To_24LC64_EEPROM(0x0020, TxArray, 4);
  75          //  // Read 4 bytes starting from 0x0020 address in EEPROM, save these bytes into RxArray
  76          //  Read_Bytes_From_24LC64_EEPROM(0x0020, RxArray, 4);
  77          
  78          //  // Display received values on LCD display
  79          //  lcd_string(RxArray[0]);
  80          //  lcd_string(RxArray[1]);
  81          //  lcd_string(RxArray[2]);
  82          //  lcd_string(RxArray[3]);
  83          //  lcd_string(RxByte);
  84          
  85          //  while(1)
  86          //  { 
  87          //  }
  88          //}


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    129    ----
   CONSTANT SIZE    =      6    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
